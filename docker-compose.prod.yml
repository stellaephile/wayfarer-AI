version: '3.8'

services:
  trip-planner:
    build:
      context: .
      dockerfile: Dockerfile.prod
    container_name: ai-trip-planner-prod
    ports:
      - "8501:8501"
    volumes:
      - trip_data:/app/data
      - trip_logs:/app/logs
    environment:
      - VERTEX_AI_PROJECT_ID=${VERTEX_AI_PROJECT_ID}
      - VERTEX_AI_LOCATION=${VERTEX_AI_LOCATION:-us-central1}
      - VERTEX_AI_MODEL=${VERTEX_AI_MODEL:-gemini-pro}
      - GOOGLE_APPLICATION_CREDENTIALS=/app/credentials/service-account-key.json
    env_file:
      - .env
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8501/_stcore/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - trip-planner-network

  # PostgreSQL database for production
  postgres:
    image: postgres:13-alpine
    container_name: trip-planner-db
    environment:
      POSTGRES_DB: trip_planner
      POSTGRES_USER: trip_user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-trip_password_123}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - trip-planner-network

  # Redis for session management (optional)
  redis:
    image: redis:6-alpine
    container_name: trip-planner-redis
    ports:
      - "6379:6379"
    restart: unless-stopped
    networks:
      - trip-planner-network

  # Nginx reverse proxy (optional)
  nginx:
    image: nginx:alpine
    container_name: trip-planner-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - trip-planner
    restart: unless-stopped
    networks:
      - trip-planner-network

volumes:
  trip_data:
  trip_logs:
  postgres_data:

networks:
  trip-planner-network:
    driver: bridge
